<?xml version="1.0" encoding="UTF-8"?>

<project name="ubar" default="package" basedir=".">
	
	<!-- get build properties such as version number -->
	<property file="build.properties"/>
	
	<!-- provide access to environment variables -->
	<property environment="env" />

	<!-- reused folders -->
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="test.dir" value="${basedir}/test" />
	<property name="lib.build.dir" value="${build.dir}/lib/ubar" />
	<property name="sample.dir" value="${dist.dir}/sample" />
	<property name="docs.output.dir" value="${dist.dir}/docs" />
	<property name="logs.dir" value="${basedir}/logs" />
	
	<!-- reused file names -->
	<property name="package.name" value="ubar-${framework.version}.zip" />
	<property name="config.name" value="ubar_config.properties" />
	<property name="actiondefs.name" value="ubar.xml" />
	
	<target name="test" description="Run all phpunit tests">
		<echo>Running PHPUnit tests</echo>
		
		<delete dir="${logs.dir}" />
		<mkdir dir="${logs.dir}" />
		
		<exec dir="${test.dir}" executable="phpunit.bat" failonerror="true">
			<arg line="--log-junit ${logs.dir}/UbarAllTests.xml  --verbose UbarAllTests" />
		</exec>
		
		<exec dir="${test.dir}" executable="phpunit.bat" failonerror="true">
			<arg line="--coverage-html ${logs.dir}/coverage UbarAllTests" />
		</exec>
	</target>
	
	<target name="build-sample" description="Build sample implementation of framework" depends="build-source">
		<!-- re-init sample dist dir -->
		<delete dir="${sample.dir}" />
		<mkdir dir="${sample.dir}" />
		
		<!-- copy sample content over -->
		<copy todir="${sample.dir}" preservelastmodified="true">
			<fileset dir="${basedir}/sample/">
				<exclude name="config/"/>
			</fileset>
		</copy>
		
		<!-- install framework into ignored lib folder of sample application -->
		<copy todir="${sample.dir}/WEB-INF/lib/ubar" preservelastmodified="true">
			<fileset dir="${lib.build.dir}">
				<exclude name="install/"/>
				<exclude name="ubar_config.properties"/>
				<exclude name="ubar.xml"/>
			</fileset>
		</copy>
		
		<!-- install elements from install directory -->
		<copy todir="${sample.dir}/web/" preservelastmodified="true">
			<fileset dir="${lib.build.dir}/install">
			</fileset>
		</copy>
		
		<!-- copy sample config and action config -->
		<copy todir="${sample.dir}/WEB-INF/lib/ubar" preservelastmodified="true">
			<fileset dir="${basedir}/sample/config">
			</fileset>
		</copy>
		
	</target>
	
	<target name="test-sample" description="Smoke test for sample working as expected">
		<!-- For each action, test expected output including result, page info, etc -->
	</target>
	
	<!-- NOTE: This requires that you have installed phpDocumentor using pear
	and set an environment variabe PEAR_HOME to the location of your pear
	directory -->
	<target name="generate-docs" description="Generate documentation">
		<echo>=== Generating documentation with phpDocumentor for Ubar version ${framework.version} ===</echo>

		<!-- clear out old docs -->
		<delete failonerror="true" dir="${docs.output.dir}" />
		<mkdir dir="${docs.output.dir}" />
		
		<!-- generate html docs for hosting -->
		<exec executable="php">
			<arg value="${env.PEAR_HOME}/PhpDocumentor/phpDocumentor/phpdoc.inc" />
			<arg value="--target" />
			<arg value="${docs.output.dir}" />
			<arg value="--output" />
			<arg value="HTML:frames:default" />
			<arg value="--directory" />
			<arg value="${basedir}" />
			<arg value="--ignore" />
			<arg value="${basedir}/test/core/*,${basedir}/test/data/*,${basedir}/test/sample/*,${basedir}/sample/*,${basedir}/dist/*,${basedir}/build/*,${basedir}/test/UbarAllTests.php" />
			<arg value="--title" />
			<arg value="Ubar PHP MVC Framework Documentation" />
			<arg value="--parseprivate" />
		</exec>
		
		<!-- fix bad links -->
		<echo>=== Manually fixing broken documentation internal links ===</echo>
		<replaceregexp>
			<regexp pattern='Located in &lt;a class="field" href="(.+)"&gt;(.+)&lt;/a&gt;' />
			<substitution expression='Located in &lt;a class="field" href="../\1"&gt;\2&lt;/a&gt;' />

			<fileset dir="${docs.output.dir}">
				<include name="core/constants/*" />
				<include name="core/containers/*" />
				<include name="core/exceptions/*" />
				<include name="core/test/*" />
				<include name="core/utils/*" />
			</fileset>
		</replaceregexp>
	</target>

	<target name="build-source" description="Package source files">
		<!-- re-init lib build dir -->
		<delete dir="${lib.build.dir}" />
		<mkdir dir="${lib.build.dir}" />
		
		<!-- copy files over -->
		<copy todir="${lib.build.dir}" preservelastmodified="true">
			<fileset dir="${basedir}">
				<exclude name="dist/"/>
				<exclude name="build/"/>
				<exclude name="test/"/>
				<exclude name="logs/"/>
				<exclude name="sample/"/>
				<exclude name="build.properties"/>
				<exclude name="${config.name}*"/>
				<exclude name="${actiondefs.name}*"/>
				<exclude name="README"/>
				<exclude name="core.html"/>
				<exclude name="build.xml"/>
			</fileset>
		</copy>
		
		<!-- copy test files developers will want to use to test their app -->
		<copy file="${test.dir}/UbarBaseActionTestCase.php" tofile="${lib.build.dir}/test/UbarBaseActionTestCase.php" preservelastmodified="true" />
		<copy file="${test.dir}/UbarBaseTestCase.php" tofile="${lib.build.dir}/test/UbarBaseTestCase.php" preservelastmodified="true" />
		<copy file="${test.dir}/UbarTestSuite.php" tofile="${lib.build.dir}/test/UbarTestSuite.php" preservelastmodified="true" />

		<!-- copy .in files to build directory for inclusion in archive -->
		<copy file="${config.name}.in" tofile="${lib.build.dir}/${config.name}" preservelastmodified="true" />
		<copy file="${actiondefs.name}.in" tofile="${lib.build.dir}/${actiondefs.name}" preservelastmodified="true" />
	</target>
	
	<target name="package" description="Package project for distribution" depends="test,generate-docs,build-source,build-sample">
		<!-- delete last package -->
		<delete failonerror="false" file="${dist.dir}/${package.name}" />
		
		<!-- copy README to root instead of being in lib -->
		<copy file="${basedir}/README" tofile="${build.dir}/README" preservelastmodified="true" />

		<!-- zip contents of build dir -->
		<zip
			destfile="${dist.dir}/${package.name}"
			basedir="${build.dir}"
		/>
		
		<!-- copy sample application to root instead of being in lib -->
		<zip
			update="true"
			destfile="${dist.dir}/${package.name}"
			basedir="${dist.dir}"
			includes="sample/**"
		/>
		
		<!-- merge in docs already in dist dir -->
		<zip
			update="true"
			destfile="${dist.dir}/${package.name}"
			basedir="${dist.dir}"
			includes="docs/**"
		/>
		
		<delete dir="${build.dir}" />
	</target>
</project>