<?xml version="1.0" encoding="UTF-8"?>

<project name="ubar" default="package" basedir=".">
	
	<!-- get build properties such as version number -->
	<property file="build.properties"/>
	
	<!-- provide access to environment variables -->
	<property environment="env" />

	<!-- reused folders -->
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="test.dir" value="${basedir}/test" />
	<property name="lib.build.dir" value="${build.dir}/lib/ubar" />
	<property name="sample.dir" value="${dist.dir}/sample" />
	<property name="docs.output.dir" value="${dist.dir}/docs" />
	<property name="logs.dir" value="${basedir}/logs" />
	
	<!-- reused file names -->
	<property name="package.name" value="ubar-${framework.version}.zip" />
	<property name="config.name" value="ubar_config.properties" />
	<property name="actiondefs.name" value="ubar.xml" />
	
	<target name="test" description="Run all phpunit tests">
		<echo>Running PHPUnit tests</echo>
		
		<mkdir dir="${logs.dir}" />
		
		<exec dir="${test.dir}" executable="phpunit.bat" failonerror="true">
			<arg line="--log-junit ${logs.dir}/UbarTestSuite.xml  --verbose UbarTestSuite" />
		</exec>
	</target>
	
	<!-- NOTE: This requires that you have installed phpDocumentor using pear
	and set an environment variabe PEAR_HOME to the location of your pear
	directory -->
	<target name="generate-docs" description="Generate documentation">
		<echo>=== Generating documentation with phpDocumentor for Ubar version ${framework.version} ===</echo>

		<!-- clear out old docs -->
		<delete dir="${docs.output.dir}" />
		<mkdir dir="${docs.output.dir}" />
		
		<!-- generate html docs for hosting -->
		<exec executable="php">
			<arg value="${env.PEAR_HOME}/PhpDocumentor/phpDocumentor/phpdoc.inc" />
			<arg value="--target" />
			<arg value="${docs.output.dir}" />
			<arg value="--output" />
			<arg value="HTML:frames:default" />
			<arg value="--directory" />
			<arg value="${basedir}" />
			<arg value="--ignore" />
			<arg value="${basedir}/test*" />
			<arg value="--title" />
			<arg value="Ubar PHP MVC Framework Documentation" />
			<arg value="--parseprivate" />
		</exec>
	</target>
	
	<target name="build-source" description="Package source files">
		<!-- re-init lib build dir -->
		<delete dir="${lib.build.dir}" />
		<mkdir dir="${lib.build.dir}" />
		
		<!-- copy files over -->
		<copy todir="${lib.build.dir}">
			<fileset dir="${basedir}">
				<exclude name="dist/"/>
				<exclude name="build/"/>
				<exclude name="test/"/>
				<exclude name="build.properties"/>
				<exclude name="${config.name}*"/>
				<exclude name="${actiondefs.name}*"/>
				<exclude name="README"/>
			</fileset>
		</copy>

		<!-- copy .in files to build directory for inclusion in archive -->
		<copy file="${config.name}.in" tofile="${lib.build.dir}/${config.name}"/>
		<copy file="${actiondefs.name}.in" tofile="${lib.build.dir}/${actiondefs.name}"/>
	</target>
	
	<target name="package" description="Package project for distribution" depends="test,generate-docs,build-source">
		<!-- delete last package -->
		<delete failonerror="false" file="${dist.dir}/${package.name}" />
		
		<!-- copy README to root instead of being in lib -->
		<copy file="${basedir}/README" tofile="${build.dir}/README"/>
		
		<!-- zip contents of build dir -->
		<zip
			destfile="${dist.dir}/${package.name}"
			basedir="${build.dir}"
		/>
		
		<!-- merge in docs already in dist dir -->
		<zip
			update="true"
			destfile="${dist.dir}/${package.name}"
			basedir="${dist.dir}"
			includes="docs/**"
		/>
		
		<delete dir="${build.dir}" />
	</target>
</project>